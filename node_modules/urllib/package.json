{
  "name": "urllib",
  "version": "2.3.5",
  "description": "Help in opening URLs (mostly HTTP) in a complex world — basic and digest authentication, redirections, cookies and more.",
  "keywords": [
    "urllib",
    "http",
    "urlopen",
    "curl",
    "wget",
    "request",
    "https"
  ],
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com",
    "url": "http://fengmk2.github.com"
  },
  "homepage": "http://github.com/node-modules/urllib",
  "main": "lib/urllib.js",
  "files": [
    "lib/"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/urllib.git"
  },
  "scripts": {
    "test": "mocha -R spec -t 20000 -r should -r should-http test/*.test.js",
    "test-cov": "node --harmony node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- -t 20000 -r should -r should-http test/*.test.js",
    "test-travis": "node --harmony node_modules/.bin/istanbul cover node_modules/.bin/_mocha --report lcovonly -- -t 20000 -r should -r should-http test/*.test.js",
    "jshint": "jshint .",
    "autod": "autod -w --prefix '~' -t test -e examples",
    "cnpm": "npm install --registry=https://registry.npm.taobao.org",
    "contributors": "contributors -f plain -o AUTHORS"
  },
  "dependencies": {
    "debug": "~2.1.3",
    "default-user-agent": "~0.0.1",
    "digest-header": "~0.0.1",
    "humanize-ms": "~1.0.1",
    "iconv-lite": "~0.4.8",
    "media-typer": "~0.3.0",
    "native-or-bluebird": "~1.2.0"
  },
  "devDependencies": {
    "agentkeepalive": "~2.0.1",
    "autod": "*",
    "bluebird": "*",
    "co": "*",
    "contributors": "*",
    "formstream": "~1.0.0",
    "istanbul": "*",
    "jshint": "*",
    "mocha": "*",
    "pedding": "~1.0.0",
    "semver": "~4.3.3",
    "should": "~6.0.1",
    "should-http": "*"
  },
  "engines": {
    "node": ">= 0.10.0",
    "iojs": ">= 1.0.0"
  },
  "license": "MIT",
  "readme": "# urllib\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![appveyor build status][appveyor-image]][appveyor-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Gittip][gittip-image]][gittip-url]\n[![David deps][david-image]][david-url]\n[![io.js version][iojs-image]][iojs-url]\n[![node.js version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/urllib.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/urllib\n[travis-image]: https://img.shields.io/travis/node-modules/urllib.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/urllib\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/wpnl7r1llxyruja9/branch/master?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/fengmk2/urllib-54ds2\n[coveralls-image]: https://img.shields.io/coveralls/node-modules/urllib.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/node-modules/urllib?branch=master\n[gittip-image]: https://img.shields.io/gittip/fengmk2.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/fengmk2/\n[david-image]: https://img.shields.io/david/node-modules/urllib.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/urllib\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/\n[iojs-image]: https://img.shields.io/badge/io.js-%3E=_1.0-yellow.svg?style=flat-square\n[iojs-url]: http://iojs.org/\n[download-image]: https://img.shields.io/npm/dm/urllib.svg?style=flat-square\n[download-url]: https://npmjs.org/package/urllib\n\nRequest HTTP URLs in a complex world — basic\nand digest authentication, redirections, cookies, timeout and more.\n\n## Install\n\n```bash\n$ npm install urllib --save\n```\n\n## Usage\n\n### callback\n\n```js\nvar urllib = require('urllib');\n\nurllib.request('http://cnodejs.org/', function (err, data, res) {\n  if (err) {\n    throw err; // you need to handle error\n  }\n  console.log(res.statusCode);\n  console.log(res.headers);\n  // data is Buffer instance\n  console.log(data.toString());\n});\n```\n\n### Promise\n\nIf you've installed [bluebird][bluebird],\n[bluebird][bluebird] will be used.\n`urllib` does not install [bluebird][bluebird] for you.\n\nOtherwise, if you're using a node that has native v8 Promises (v0.11.13+),\nthen that will be used.\n\nOtherwise, this library will crash the process and exit,\nso you might as well install [bluebird][bluebird] as a dependency!\n\n```js\nvar urllib = require('urllib');\n\nurllib.request('http://nodejs.org').then(function (result) {\n  // result: {data: buffer, res: response object}\n  console.log('status: %s, body size: %d, headers: %j', result.res.statusCode, result.data.length, result.res.headers);\n}).catch(function (err) {\n  console.error(err);\n});\n```\n\n### co & generator\n\nIf you are using [co](https://github.com/visionmedia/co) or [koa](https://github.com/koajs/koa):\n\n```js\nvar co = require('co');\nvar urllib = require('urllib');\n\nco(function* () {\n  var result = yield urllib.requestThunk('http://nodejs.org');\n  console.log('status: %s, body size: %d, headers: %j',\n    result.status, result.data.length, result.headers);\n})();\n```\n\n## Global `response` event\n\nYou should create a urllib instance first.\n\n```js\nvar httpclient = require('urllib').create();\n\nhttpclient.on('response', function (info) {\n  error: err,\n  ctx: args.ctx,\n  req: {\n    url: url,\n    options: options,\n    size: requestSize,\n  },\n  res: res\n});\n\nhttpclient.request('http://nodejs.org', function (err, body) {\n  console.log('body size: %d', body.length);\n});\n```\n\n## API Doc\n\n### Method: `http.request(url[, options][, callback])`\n\n#### Arguments\n\n- **url** String | Object - The URL to request, either a String or a Object that return by [url.parse](http://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost).\n- ***options*** Object - Optional\n    - ***method*** String - Request method, defaults to `GET`. Could be `GET`, `POST`, `DELETE` or `PUT`. Alias 'type'.\n    - ***data*** Object - Data to be sent. Will be stringify automatically.\n    - ***content*** String | [Buffer](http://nodejs.org/api/buffer.html) - Manually set the content of payload. If set, `data` will be ignored.\n    - ***stream*** [stream.Readable](http://nodejs.org/api/stream.html#stream_class_stream_readable) - Stream to be pipe to the remote. If set, `data` and `content` will be ignored.\n    - ***writeStream*** [stream.Writable](http://nodejs.org/api/stream.html#stream_class_stream_writable) - A writable stream to be piped by the response stream. Responding data will be write to this stream and `callback` will be called with `data` set `null` after finished writing.\n    - ***contentType*** String - Type of request data. Could be `json`. If it's `json`, will auto set `Content-Type: application/json` header.\n    - ***dataType*** String - Type of response data. Could be `text` or `json`. If it's `text`, the `callback`ed `data` would be a String. If it's `json`, the `data` of callback would be a parsed JSON Object. Default `callback`ed `data` would be a `Buffer`.\n    - ***headers*** Object - Request headers.\n    - ***timeout*** Number - Request timeout in milliseconds. Defaults to `exports.TIMEOUT`. Include remote server connecting timeout and response timeout. When timeout happen, will return `ConnectionTimeout` or `ResponseTimeout`.\n    - ***auth*** String - `username:password` used in HTTP Basic Authorization.\n    - ***digestAuth*** String - `username:password` used in HTTP [Digest Authorization](http://en.wikipedia.org/wiki/Digest_access_authentication).\n    - ***agent*** [http.Agent](http://nodejs.org/api/http.html#http_class_http_agent) - HTTP Agent object.\n      Set `false` if you does not use agent.\n    - ***httpsAgent*** [https.Agent](http://nodejs.org/api/https.html#https_class_https_agent) - HTTPS Agent object.\n      Set `false` if you does not use agent.\n    - ***ca*** String | Buffer | Array - An array of strings or Buffers of trusted certificates.\n      If this is omitted several well known \"root\" CAs will be used, like VeriSign.\n      These are used to authorize connections.\n      **Notes**: This is necessary only if the server uses the self-signed certificate\n    - ***rejectUnauthorized*** Boolean - If true, the server certificate is verified against the list of supplied CAs.\n      An 'error' event is emitted if verification fails. Default: true.\n    - ***pfx*** String | Buffer - A string or Buffer containing the private key,\n      certificate and CA certs of the server in PFX or PKCS12 format.\n    - ***key*** String | Buffer - A string or Buffer containing the private key of the client in PEM format.\n      **Notes**: This is necessary only if using the client certificate authentication\n    - ***cert*** String | Buffer - A string or Buffer containing the certificate key of the client in PEM format.\n      **Notes**: This is necessary only if using the client certificate authentication\n    - ***passphrase*** String - A string of passphrase for the private key or pfx.\n    - ***ciphers*** String - A string describing the ciphers to use or exclude.\n    - ***secureProtocol*** String - The SSL method to use, e.g. SSLv3_method to force SSL version 3.\n    - ***followRedirect*** Boolean - follow HTTP 3xx responses as redirects. defaults to false.\n    - ***maxRedirects*** Number - The maximum number of redirects to follow, defaults to 10.\n    - ***beforeRequest*** Function - Before request hook, you can change every thing here.\n    - ***streaming*** Boolean - let you get the `res` object when request  connected, default `false`. alias `customResponse`\n    - ***gzip*** Boolean - Accept gzip response content and auto decode it, default is `false`.\n- ***callback(err, data, res)*** Function - Optional callback.\n    - **err** Error - Would be `null` if no error accured.\n    - **data** Buffer | Object - The data responsed. Would be a Buffer if `dataType` is set to `text` or an JSON parsed into Object if it's set to `json`.\n    - **res** [http.IncomingMessage](http://nodejs.org/api/http.html#http_http_incomingmessage) - The response.\n\n#### Returns\n\n[http.ClientRequest](http://nodejs.org/api/http.html#http_class_http_clientrequest) - The request.\n\nCalling `.abort()` method of the request stream can cancel the request.\n\n#### Options: `options.data`\n\nWhen making a request:\n\n```js\nurllib.request('http://example.com', {\n  method: 'GET',\n  data: {\n    'a': 'hello',\n    'b': 'world'\n  }\n});\n```\n\nFor `GET` request, `data` will be stringify to query string, e.g. `http://example.com/?a=hello&b=world`.\n\nFor others like `POST`, `PATCH` or `PUT` request,\nin defaults, the `data` will be stringify into `application/x-www-form-urlencoded` format\nif `Content-Type` header is not set.\n\nIf `Content-type` is `application/json`, the `data` will be `JSON.stringify` to JSON data format.\n\n#### Options: `options.content`\n\n`options.content` is useful when you wish to construct the request body by yourself,\nfor example making a `Content-Type: application/json` request.\n\nNotes that if you want to send a JSON body, you should stringify it yourself:\n\n```js\nurllib.request('http://example.com', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  content: JSON.stringify({\n    a: 'hello',\n    b: 'world'\n  })\n});\n```\n\nIt would make a HTTP request like:\n\n```http\nPOST / HTTP/1.1\nHost: example.com\nContent-Type: application/json\n\n{\n  \"a\": \"hello\",\n  \"b\": \"world\"\n}\n```\n\nThis exmaple can use `options.data` with `application/json` content type:\n\n```js\nurllib.request('http://example.com', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  data: {\n    a: 'hello',\n    b: 'world'\n  }\n});\n```\n\n#### Options: `options.stream`\n\nUploads a file with [formstream](https://github.com/node-modules/formstream):\n\n```js\nvar urllib = require('urllib');\nvar formstream = require('formstream');\n\nvar form = formstream();\nform.file('file', __filename);\nform.field('hello', '你好urllib');\n\nvar req = urllib.request('http://my.server.com/upload', {\n  method: 'POST',\n  headers: form.headers(),\n  stream: form\n}, function (err, data, res) {\n  // upload finished\n});\n```\n\n### Response Object\n\nResponse is normal object, it contains:\n\n* `status` or `statusCode`: response status code, `-1` meaning some network error like `ENOTFOUND`\n* `headers`: response http headers, default is `{}`\n* `size`: response size\n* `aborted`: response was aborted or not\n* `rt`: total request and response time in ms.\n\n#### Response: `res.aborted`\n\nIf the underlaying connection was terminated before `response.end()` was called,\n`res.aborted` should be `true`,\nand return `RemoteSocketClosedError` error.\n\n```js\nvar server = require('http').createServer(function (req, res) {\n  req.resume();\n  req.on('end', function () {\n    res.write('foo haha\\n');\n    setTimeout(function () {\n      res.write('foo haha 2');\n      setTimeout(function () {\n        res.socket.end();\n      }, 300);\n    }, 200);\n    return;\n  });\n});\n\nurllib.request('http://127.0.0.1:1984/socket.end', function (err, data, res) {\n  err.name.should.equal('RemoteSocketClosedError');\n  err.message.should.equal('Remote socket was terminated before `response.end()` was called');\n  data.toString().should.equal('foo haha\\nfoo haha 2');\n  should.ok(res.aborted);\n  done();\n});\n```\n\n## TODO\n\n* [ ] Support component\n* [ ] Browser env use Ajax\n* [√] Upload file like form upload\n* [√] Auto redirect handle\n* [√] https & self-signed certificate\n* [√] Connection timeout & Response timeout\n* [√] Support `Accept-Encoding=gzip` by `options.gzip = true`\n* [√] Support [Digest access authentication](http://en.wikipedia.org/wiki/Digest_access_authentication)\n\n## License\n\n[MIT](LICENSE.txt)\n\n\n[bluebird]: https://github.com/petkaantonov/bluebird\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/node-modules/urllib/issues"
  },
  "_id": "urllib@2.3.5",
  "_shasum": "97b508f789a8dfe34312ec3eaeeaa7113292b7e0",
  "_from": "urllib@",
  "_resolved": "https://registry.npmjs.org/urllib/-/urllib-2.3.5.tgz"
}
